/*Задание 2. Лечебница
Напишите программу для картотеки пациентов лечебницы. 
С клавиатуры вводится неизвестное количество целых положительных 
чисел - возрастов пациентов. Когда пациенты заканчиваются, 
медсестра вводит число -1. Это говорит программе о том, что пора 
заканчивать с приемом пациентов и переходить к расчету статистики.
 
Напишите программу, складывающую в вектор целые положительные числа, 
пока не поступит отрицательное число. После этого выведите среднее 
значение всех введенных чисел и их количество.*/
#include <iostream> // подключает библиотеку для ввода/вывода данных.
#include <vector>   //  подключает библиотеку для использования контейнера vector

void calculatePatientStatistics() // Определение функции calculatePatientStatistics(), которая не возвращает значения (тип void).
{
    std::vector<int> ages; // Создание пустого вектора ages, который будет хранить возрасты пациентов.
    int age;    // Объявление переменной age, которая будет использоваться для ввода возраста пациентов.

    std::cout << "This is patient file. Enter the patient’s elevation. When finished, enter the -1: ";
    while (true) // Начало бесконечного цикла. Цикл будет выполняться до тех пор, пока не будет выполнено условие break.
    {
        std::wcout << "Input age: " << '\n';
        std::cin >> age;    // Внутри цикла происходит чтение значения возраста с помощью std::cin и сохранение его в переменную age.
        
        if (age == 0 || age < -1)  // Если значение age равно -1, цикл прерывается с помощью break.
        {
            std::cout << "Error. Zero or minus zero age is not possible. Try agen: ";
        } 
        if (age == -1) break;
        ages.push_back(age);    // В противном случае, значение age добавляется в конец вектора ages с помощью метода push_back().
    }

    int count = ages.size();    // Определение переменной count, которая содержит количество элементов в векторе ages с помощью метода size().
    int sum = 0;    // Инициализация переменной sum со значением 0, которая будет использоваться для вычисления суммы возрастов пациентов.

    for (int i = 0; i < count; i++)     // Цикл for, который проходит по всем элементам вектора ages с помощью переменной i.
    {
        sum += ages[i];     // Внутри цикла, значение каждого элемента ages[i] добавляется к переменной sum.
    }

    double average = /*static_cast<double>*/double(sum) / count; // Определение переменной average типа double, которая будет содержать среднее значение возрастов пациентов.
                                                                   // Значение sum приводится к типу double с помощью static_cast<double>(sum), чтобы получить точное значение среднего значения.
                                                                    // Затем значение sum делится на count для вычисления среднего значения и присваивается переменной average
    std::cout << "The average ages of patients: " << average << '\n';  // Вывод на экран среднего значения возрастов пациентов 
    std::cout << "Number of patients: " << count << '\n';      // Вывод количества пациентов
}

int main() {
    calculatePatientStatistics();

    return 0;
}